#!/bin/sh
# Copyright(c) 2011 Red Hat, Inc.
#
# This is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2 of the License, or (at your option) any later version.
#
# This software is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library in the file COPYING.LIB;
# if not, write to the Free Software Foundation, Inc.,
# 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA
#
# @author Mladen Turk
#
# Master build task
#

procfiles()
{
    for o
    do
        case $o in
            .  )
               echo .
               break
            ;;
            /* )
                echo .$o
            ;;
            *  )
                echo $o
            ;;
        esac
    done
}

genbuildinfo()
{
    install -m 755 -d META-INF
    cat > "META-INF/INFO.txt" <<EOH
NAME:         $1
VERSION:      1.2.3
RELEASE:      $release
SUMMARY:      $summary
DISTRIBUTION: Red Hat
VENDOR:       Red Hat, Inc.
LICENSE:      $license
PACKAGER:     Red Hat, Inc. <http://bugzilla.redhat.com/bugzilla>
GROUP:        $group
OS:           $_os
ARCH:         $_arch
SOURCE RPM:   $_source.src.zip
URL:          $origin
TIMESTAMP:    `date -R`
COMPILER:     `ccversion`
DESCRIPTION:
`description $2`
CHANGELOG:
`changelog 1`
EOH

}

# Execute hooks
build_prepare()
{
    $ECHO "build prepare \`$_source.$_arch'"
    test -d "$_sourcedir/$_source" || xbexit 1 "cannot find \`$_source' directory"
    newdir "$_builddir/$_source.$_arch"
    newdir "$buildroot"
    copypdir "$_sourcedir/$_source" "$_builddir/$_source.$_arch"
    (
        cd "$_builddir/$_source.$_arch"
        for i in $name.${_os_c}prep $name.buildprep
        do
            if [ -s "$_sourcedir/$i" ]
            then
                . "$_sourcedir/$i"
                break
            fi
        done
        return 0
    )
    test $? -ne 0 && exit 1
    return 0
}

build_execute()
{
    files=
    files_doc=
    files_devel=
    files_devel_doc=
    $ECHO "build execute \`$_source.$_arch'"
    (
       cd "$_builddir/$_source.$_arch"
       for i in $name.${_os_c}build $name.build
       do
            if [ -s "$_sourcedir/$i" ]
            then
                files=.
                . "$_sourcedir/$i"
                break
            fi
        done
        cd "$buildroot"
        genbuildinfo $name
        if [ ".$files" != . ]
        then
            a="`procfiles $files ./META-INF`"
            if [ ".$files_doc" != . ]
            then
                d="$_docdir/$name-$version"
                newdir "$buildroot$d"
                for i in $files_doc
                do
                    case $i in
                        @*  )
                            i="`echo $i | sed 's/^@//'`"
                            copypdir $_builddir/$_source.$_arch/$i "$buildroot$d"
                        ;;
                        *=* )
                            s="`echo $i | sed 's/=.*//'`"
                            n="`echo $i | sed 's/.*=//'`"
                            copypdir $_builddir/$_source.$_arch/$s "$buildroot$d/$n"
                        ;;
                        /*  )
                            cp -rf $i "$buildroot$d"
                        ;;
                        *   )
                            cp -rf $_builddir/$_source.$_arch/$i "$buildroot$d"
                        ;;
                    esac
                done
                a="`procfiles $a $d`"
            fi
            prepzipcontent
            $ECHO "Archive: \`$name-$version-$release.$_arch.zip'"
            zip -rq9 "$_outputdir/$name-$version-$release.$_arch.zip" $a
            test $? -ne 0 && exit 1
        fi
        if [ ".$files_devel" != . ]
        then
            genbuildinfo $name-devel devel
            a="`procfiles $files_devel ./META-INF`"
            if [ ".$files_devel_doc" != . ]
            then
                d="$_docdir/$name-devel-$version"
                newdir "$buildroot$d"
                for i in $files_devel_doc
                do
                    case $i in
                        @*  )
                            i="`echo $i | sed 's/^@//'`"
                            copypdir $_builddir/$_source.$_arch/$i "$buildroot$d"
                        ;;
                        *=* )
                            s="`echo $i | sed 's/=.*//'`"
                            n="`echo $i | sed 's/.*=//'`"
                            copypdir $_builddir/$_source.$_arch/$s "$buildroot$d/$n"
                        ;;
                        /*  )
                            cp -rf $i "$buildroot$d"
                        ;;
                        *   )
                            cp -rf $_builddir/$_source.$_arch/$i "$buildroot$d"
                        ;;
                    esac
                done
                a="`procfiles $a $d`"
            fi
            prepzipcontent
            $ECHO "Archive: \`$name-devel-$version-$release.$_arch.zip'"
            zip -rq9 "$_outputdir/$name-devel-$version-$release.$_arch.zip" $a
        fi
        return 0
    )
    return $?
}
