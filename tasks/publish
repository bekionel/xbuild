#!/bin/sh
# Copyright(c) 2011 Red Hat, Inc.
#
# This is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2 of the License, or (at your option) any later version.
#
# This software is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library in the file COPYING.LIB;
# if not, write to the Free Software Foundation, Inc.,
# 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA
#
# @author Mladen Turk
#
# Publish artifacts to repository
#
_sharedroot="/home/shared"
# Execute hooks
publish_prepare()
{
    $ECHO "publish prepare \`$_source.$_arch'"    
    test -d "$_sharedroot" || _sharedroot="/export/home/shared"
    d="$_sharedroot/xbuildroot/packages"
    mkdir -p "$d"
    return $?
}

addtorepo()
{
    if [ -f "$1/.${_os_c}repo" ]
    then
        a=`grep "$name $version $release" "$1/.${_os_c}repo"`
        if [ ".$a" = . ]
        then
            echo "$name $version $release" > "$1/.${_os_c}repo.new"
            cat "$1/.${_os_c}repo" >> "$1/.${_os_c}repo.new"
            mv "$1/.${_os_c}repo.new" "$1/.${_os_c}repo"
        fi
    else
        echo "$name $version $release" > "$1/.${_os_c}repo"
    fi
}

publish_execute()
{
    test -d "$_sharedroot" || _sharedroot="/export/home/shared"
    r="$_sharedroot/xbuildroot/packages"
    $ECHO "publish execute $r/$name/$version/$release/$_arch"
    (
        d="$r/$name/$version/$release"
        if [ ".$has_force" = .yes ]; then
            rm -rf "$r/$name/$version/$release"
        fi
        mkdir -p "$d/$_arch"
        for i in $NVRA.zip $NDVRA.zip
        do
            if [ -f $i ]
            then
                if [ -f "$d/$_arch/$i" ]
                then
                    $ECHO "$i already present in \`$d/$_arch'"
                    $ECHO "overwritting \`$i'"
                fi
                md5sum -b $i > "$d/$_arch/$i.md5"
                mv -f $i "$d/$_arch/"
                if [ "$i" = "$NVRA.zip" ]
                then
                    pushd "$d/$_arch/"
                    echo '<blockquote><pre>' > README.html
                    unzip -z $i >> README.html
                    echo '</pre></blockquote>' >> README.html
                    popd
                fi
            fi

        done
        s=$NVR.src.zip
        if [ -f $s ]
        then
            if [ -f "$d/src/$s" ]
            then
                $ECHO "$s already present in \`$d/src'"
                $ECHO "overwritting \`$s'"
            fi
            mkdir -p "$d/src"
            md5sum -b $s > "$d/src/$s.md5"
            mv -f $s "$d/src/"
            pushd "$d/src/"
            echo '<blockquote><pre>' > README.html
            unzip -z $s >> README.html
            echo '</pre></blockquote>' >> README.html
            popd
        fi
        addtorepo "$r"
    )
    return $?
}
