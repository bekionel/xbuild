#!/bin/sh
# Copyright(c) 2011 Red Hat, Inc.
#
# This is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2 of the License, or (at your option) any later version.
#
# This software is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library in the file COPYING.LIB;
# if not, write to the Free Software Foundation, Inc.,
# 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA
#
# @author Mladen Turk
#
#
check_prepare()
{
    $ECHO "check started"
    echo "Dumping environment ..."
    return 0
}

check_execute()
{
    cat << EOH
XBuild:
version         $XB_VERSION
root            $XB_ROOTDIR

Specfile definitions:
name            $name
summary         $summary
group           $group
specfile        $specfile
release         $release
dist            $dist
version         $version
setupname       $setupname -> $_source

Host info:
_os             $_os
_arch           $_arch
__isa_bits      $__isa_bits
__isa_name      $__isa_name
__isa           $__isa
_host_cpu       $_host_cpu
_host_os        $_host_os
_host           $_host

Tools:
__awk           $__awk
__tar           $__tar
__gzip          $__gzip
__bzip2         $__bzip2
__xz            $__xz
__rpm2cpio      $__rpm2cpio
__java          $__java
__javac         $__javac

Build:
_prefix         $_prefix
_bindir         $_bindir
_libdir         $_libdir
_sbindir        $_sbindir
_destdir        $_destdir
_sourcedir      $_sourcedir
_builddir       $_builddir
_buildrootdir   $_buildrootdir

Environment:
__cwd           $__cwd
__tag_name      $__tag_name
hostname        `hostname`
PATH            $PATH
JAVA_HOME       $JAVA_HOME
EOH

$__perl --version 2>&1
$__java -version 2>&1
$__javac -version 2>&1

if [ "$_os" = windows ]
then
    cat << EOH

Windows envronment:
`cygspawn cmd.exe /C set`
Checking MSVC environment ...
EOH
    $__make /? 2>&1 1>/dev/null
    test ".$?" != .0 && echo "NMAKE FAILED"
cat > /tmp/cc$$.c << EOH
#include <stdlib.h>
#include <stdio.h>
int main()
{
    return 0;
}

EOH
    cygspawn cl.exe /MD /c /tmp/cc$$.c /Fo/tmp/cc$$.o 2>&1
    test ".$?" != .0 && echo "MSVC FAILED"
    cygspawn link.exe /tmp/cc$$.o $EXTRA_LIBS /OUT:/tmp/cc$$.exe 2>&1
    if [ ".$?" = .0 ]
    then
        cygspawn depends.exe /c /f:1 /ot /tmp/cc%%.txt /tmp/cc$$.exe
        cat /tmp/cc%%.txt | head -27
    else
        echo "LINK FAILED"
    fi
    rm /tmp/cc$$.*
fi

    cat << EOH

RPM envronment:

RPM_BUILD_ROOT      $buildroot
RPM_SOURCE_DIR      $_sourcedir
RPM_BUILD_DIR       $_builddir
RPM_ARCH            $_arch
RPM_OS              $_os
RPM_PACKAGE_NAME    $name
RPM_PACKAGE_VERSION $version
RPM_PACKAGE_RELEASE $release

Package sources:
EOH
    r="http://cvs.devel.redhat.com/repo/dist"
    o="--tries=0 --quiet"
    (
        IFS=$__lf
        s=`cat sources 2>/dev/null`
        for i in $s
        do
            IFS=$__ifs
            h=`echo $i | $__awk '{print $1}'`
            p=`echo $i | $__awk '{print $2}'`
            echo "wget : \`$r/$name/$p/$h/$p'"
        done
    )
    (
        IFS=$__lf
        s=`$__grep -i -e '^Source[0-9]*:' -e '^Patch[0-9]*:' $specfile | $__sed 's/\w*:[[:blank:]]*//'`
        for i in $s
        do
            IFS=$__ifs
            case "$i" in
                 *%{* ) e="`speceval $i`" ;;
                 *    ) e="$i" ;;
            esac
            b="`basename $e`"
            echo "copy : $b"
        done
    )
    echo "Two section changelog:"
    changelog 2
    cat << EOH

Build requirements:

EOH
    (
        IFS=",$IFS"
        for i in $buildrequires
        do
            IFS=$__ifs
            n=`echo $i | $__awk -F: '{print $1}'`
            p=`echo $i | $__awk -F: '{print $2}'`
            test ".$p" = . && p=win
            echo "requires : $n -> \`$_buildreqsdir/$n/$p'"
            if [ -d "$_buildreqsdir/$n/$p" ]
            then
                find "$_buildreqsdir/$n/$p" -maxdepth 1 -type f -exec basename '{}' \;
            fi
        done
    )
    return 0
}
