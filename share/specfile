#!/bin/sh
# Copyright(c) 2011 Red Hat, Inc.
#
# This is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2 of the License, or (at your option) any later version.
#
# This software is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library in the file COPYING.LIB;
# if not, write to the Free Software Foundation, Inc.,
# 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA
#
# @author Mladen Turk
#
# Contains specfile parsing
#

# First check if we have a specfile at all
#
test ".$specfile" = . && xbexit 1 "no specfile defined"
test -r $specfile || xbexit 1 "cannot find specfile: \`$specfile'"

rpmeval()
{
    if [ ".$1" != "." ]
    then
        x=`echo "$1" | $__sed -e 's/{\(.*\)}/{\L\1\E}/g' -e 's/%{[!?]*/${/g'`
        eval "echo \"$x\""
    fi
}

specparam()
{
    v=`$__grep -i "^$1:[[:blank:]]" $specfile | head -1 | $__sed 's/\w*:[[:blank:]]*//'`
    rpmeval "$v"
}

specsetupname()
{
    IFS=$__lf
    n=`$__grep -i '^%setup .* -n ' $specfile | $__sed -e 's/.*-n[[:blank:]]//' -e 's/\([^[:blank:]]*\).*/\1/'`
    test ".$n" = "." && n="%{name}-%{version}"
    echo "$n"
    IFS=$__ifs
}

getdefines()
{
    IFS=$__lf
    d=`$__grep -i '^%define[[:blank:]]' $specfile |\
       $__sed -e 's/%define[[:blank:]]*//' \
              -e 's/%{[!?]*/\${/g'`
    for i in $d
    do
        IFS=$__ifs
        n=`echo "$i" | $__awk '{print $1}'`
        v="`echo \"$i\" | $__sed -e 's/\w*[[:blank:]]*//' -e 's/.*\\\//'`"
        eval "$n=\"$v\""
    done
    IFS=$__ifs
}

changelog()
{
    n=0
    test ".$1" = . && c=1 || c=$1
    (
        b=true
        IFS=$__lf
        r=`$__grep -i '^%changelog$' -A 100 "$_packagedir/$specfile"`
        if [ ".$r" != . ]
        then
            for i in $r
            do
                if $b
                then
                    b=false
                    continue
                fi
                case "$i" in
                    \** )
                        let n=n+1
                        test $n -gt $c && return 0
                        test $n -gt 1 && echo ""
                        echo "$i"
                    ;;
                    %*  )
                        break
                    ;;
                    *   )
                        echo $i
                   ;;
                esac
            done
        fi
    )
}

description()
{
    (
        b=true
        IFS=$__lf
        if [ ".$1" = . ]
        then
            r=`$__grep -i '^%description$' -A 100 "$_packagedir/$specfile"`
        else
            r=`$__grep -i '^%description '$1'$' -A 100 "$_packagedir/$specfile"`
        fi
        if [ ".$r" != . ]
        then
            for i in $r
            do
                if $b
                then
                    b=false
                    continue
                fi
                case "$i" in
                    %*  )
                        break
                    ;;
                    *   )
                        echo $i
                   ;;
                esac
            done
        fi
    )
}

test ".$_bindir" = . && _bindir="$_prefix/bin"
test ".$_libdir" = . && _libdir="$_prefix/$_lib"
test ".$_libexecdir" = . && _libexecdir="$_prefix/$_libexec"
test ".$_includedir" = . && _includedir="$_prefix/include"
test ".$_sbindir" = . && _sbindir="$_prefix/sbin"
test ".$_confdir" = . && _confdir="$_prefix/etc"
test ".$_datadir" = . && _datadir="$_prefix/share"
test ".$_docdir" = . && _docdir="$_datadir/doc"
test ".$_mandir" = . && _mandir="$_datadir/man"
test ".$_javadir" = . && _javadir="$_datadir/java"
test ".$_sysconfdir" = . && _sysconfdir="$_confdir/sysconfig"
test ".$_localstatedir" = . && _localstatedir="$_prefix/var"

getdefines
test ".$name" = . && name="`specparam name`"
test ".$version" = . && version="`specparam version`"
test ".$release" = . && release="`specparam release`"
summary="`specparam summary`"
group="`specparam group`"
origin="`specparam URL`"
license="`specparam license`"
setupname="`specsetupname`"
_source="`rpmeval $setupname`"

buildroot="$_buildrootdir/$name-$version-$release.$_arch"
RPM_BUILD_ROOT="$buildroot"
RPM_SOURCE_DIR="$_sourcedir"
RPM_BUILD_DIR="$_builddir"
RPM_ROOT_DIR="$__cwd"
RPM_ARCH="$_arch"
RPM_OS="$_os"
RPM_PACKAGE_NAME="$name"
RPM_PACKAGE_VERSION="$version"
RPM_PACKAGE_RELEASE="$release"
export RPM_SOURCE_DIR RPM_BUILD_DIR RPM_ARCH RPM_OS RPM_ROOT_DIR
export RPM_PACKAGE_NAME RPM_PACKAGE_VERSION RPM_PACKAGE_RELEASE
XBS_ROOT_DIR="$_rootdir"
export XBS_ROOT_DIR
